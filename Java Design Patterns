=> Creational patterns
=> Behavaioral Pattern
=> Structural Pattern
=> J2EE Pattern

All design patterns are well documented and understood by software architect, designer and developer.

Patterns give software developers an array of tries and tested solutions to common problems, thus reducing technical rosk
to project by not having to employ a new and untested design

They are language neutral and can be applied to any language

Creational design patterns : - Related to way of creating objects. Used to define and describe how objects are
created at class instantiation label.

E.g.

Employee enp new Employee();

Here we are creating instance using new keyword.

Creational Pattern :-

=> Factory Method
=> Abstract Factory Method
=> Builder
=> Prototype
=> Singleton

Factory Pattern : we don't expose creational logic to client and refer created object using standard interface.

Steps : -

1) create main class which call factory class.
2) Factory class return required class  instance.



Prototype Pattern : Loads cache and returns required class  instance clone


